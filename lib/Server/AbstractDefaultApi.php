<?php

declare(strict_types=1);

/**
 * This file is part of the MultiFlexi package
 *
 * https://multiflexi.eu/
 *
 * (c) Vítězslav Dvořák <http://vitexsoftware.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

/**
 * This is an example of using OAuth2 Application Flow in a specification to describe security to your API.
 * The version of the OpenAPI document: 1.1.0
 * Contact: vitezslav.dvorak@spojenet.cz
 * Generated by: https://github.com/openapitools/openapi-generator.git.
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 * Extend this class with your controller. You can inject dependencies via class constructor,.
 *
 * @see https://github.com/PHP-DI/Slim-Bridge basic example.
 */

namespace MultiFlexi\Api\Server;

use Psr\Http\Message\ResponseInterface;
use Psr\Http\Message\ServerRequestInterface;
use Slim\Exception\HttpNotImplementedException;

/**
 * AbstractDefaultApi Class Doc Comment.
 *
 * @author  OpenAPI Generator team
 *
 * @see    https://github.com/openapitools/openapi-generator
 */
abstract class AbstractDefaultApi
{
    /**
     * GET getAllCredentialTypes
     * Summary: Get All Credential Types
     * Notes: Retrieve all credential types
     * Output-Formats: [application/json].
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string                 $suffix   force format suffix
     *
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getAllCredentialTypes(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $suffix
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $limit = (\array_key_exists('limit', $queryParams)) ? $queryParams['limit'] : null;
        $message = 'How about implementing getAllCredentialTypes as a GET method in MultiFlexi\\Api\\Server\\DefaultApi class?';

        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getAllTopics
     * Summary: Get All Topics
     * Notes: Retrieve all topics
     * Output-Formats: [application/json].
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string                 $suffix   force format suffix
     *
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getAllTopics(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $suffix
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $limit = (\array_key_exists('limit', $queryParams)) ? $queryParams['limit'] : null;
        $message = 'How about implementing getAllTopics as a GET method in MultiFlexi\\Api\\Server\\DefaultApi class?';

        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getAllUserCredentials
     * Summary: Get All User Credentials
     * Notes: Retrieve all user credentials
     * Output-Formats: [application/json].
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string                 $suffix   force format suffix
     *
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getAllUserCredentials(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $suffix
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $limit = (\array_key_exists('limit', $queryParams)) ? $queryParams['limit'] : null;
        $message = 'How about implementing getAllUserCredentials as a GET method in MultiFlexi\\Api\\Server\\DefaultApi class?';

        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getApiIndex
     * Summary: Endpoints listing
     * Notes: Show current API.
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string                 $suffix   force format suffix
     *
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getApiIndex(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $suffix
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $limit = (\array_key_exists('limit', $queryParams)) ? $queryParams['limit'] : null;
        $message = 'How about implementing getApiIndex as a GET method in MultiFlexi\\Api\\Server\\DefaultApi class?';

        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getCredential
     * Summary: Get User Credentials
     * Notes: Retrieve user credentials based on provided token
     * Output-Formats: [application/json].
     *
     * @param ServerRequestInterface $request      Request
     * @param ResponseInterface      $response     Response
     * @param int                    $credentialId ID of Credential to return
     * @param string                 $suffix       force format suffix
     *
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getCredential(
        ServerRequestInterface $request,
        ResponseInterface $response,
        int $credentialId,
        string $suffix
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $token = (\array_key_exists('token', $queryParams)) ? $queryParams['token'] : null;
        $limit = (\array_key_exists('limit', $queryParams)) ? $queryParams['limit'] : null;
        $message = 'How about implementing getCredential as a GET method in MultiFlexi\\Api\\Server\\DefaultApi class?';

        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getCredentialType
     * Summary: Get Credential Type by ID
     * Notes: Retrieve credential type by ID
     * Output-Formats: [application/json].
     *
     * @param ServerRequestInterface $request          Request
     * @param ResponseInterface      $response         Response
     * @param int                    $credentialTypeID ID of Credential Type to return
     * @param string                 $suffix           force format suffix
     *
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getCredentialType(
        ServerRequestInterface $request,
        ResponseInterface $response,
        int $credentialTypeID,
        string $suffix
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $limit = (\array_key_exists('limit', $queryParams)) ? $queryParams['limit'] : null;
        $message = 'How about implementing getCredentialType as a GET method in MultiFlexi\\Api\\Server\\DefaultApi class?';

        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getTopic
     * Summary: Get Topic by ID
     * Notes: Retrieve topic by ID
     * Output-Formats: [application/json].
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param int                    $topicId  ID of Topic to return
     * @param string                 $suffix   force format suffix
     *
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getTopic(
        ServerRequestInterface $request,
        ResponseInterface $response,
        int $topicId,
        string $suffix
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $limit = (\array_key_exists('limit', $queryParams)) ? $queryParams['limit'] : null;
        $message = 'How about implementing getTopic as a GET method in MultiFlexi\\Api\\Server\\DefaultApi class?';

        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET loginSuffixGet
     * Summary: Return User&#39;s token
     * Notes: Send login &amp; password to obtain oAuth token.
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string                 $suffix   force format suffix
     *
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function loginSuffixGet(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $suffix
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $username = (\array_key_exists('username', $queryParams)) ? $queryParams['username'] : null;
        $password = (\array_key_exists('password', $queryParams)) ? $queryParams['password'] : null;
        $limit = (\array_key_exists('limit', $queryParams)) ? $queryParams['limit'] : null;
        $message = 'How about implementing loginSuffixGet as a GET method in MultiFlexi\\Api\\Server\\DefaultApi class?';

        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * POST loginSuffixPost
     * Summary: Return User&#39;s token
     * Notes: Send login &amp; password to obtain oAuth token.
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string                 $suffix   force format suffix
     *
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function loginSuffixPost(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $suffix
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $username = (\array_key_exists('username', $queryParams)) ? $queryParams['username'] : null;
        $password = (\array_key_exists('password', $queryParams)) ? $queryParams['password'] : null;
        $limit = (\array_key_exists('limit', $queryParams)) ? $queryParams['limit'] : null;
        $message = 'How about implementing loginSuffixPost as a POST method in MultiFlexi\\Api\\Server\\DefaultApi class?';

        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET pingSuffixGet
     * Summary: job heartbeat operation
     * Notes: This operation shows how to override the global security defined above, as we want to open it up for all users.
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string                 $suffix   force format suffix
     *
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function pingSuffixGet(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $suffix
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $limit = (\array_key_exists('limit', $queryParams)) ? $queryParams['limit'] : null;
        $message = 'How about implementing pingSuffixGet as a GET method in MultiFlexi\\Api\\Server\\DefaultApi class?';

        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET rootGet
     * Summary: Redirect to index.
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     *
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function rootGet(
        ServerRequestInterface $request,
        ResponseInterface $response
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $limit = (\array_key_exists('limit', $queryParams)) ? $queryParams['limit'] : null;
        $message = 'How about implementing rootGet as a GET method in MultiFlexi\\Api\\Server\\DefaultApi class?';

        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET statusSuffixGet
     * Summary: Get API status
     * Notes: This operation shows how to override the global security defined above, as we want to open it up for all users.
     * Output-Formats: [application/json].
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string                 $suffix   force format suffix
     *
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function statusSuffixGet(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $suffix
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $limit = (\array_key_exists('limit', $queryParams)) ? $queryParams['limit'] : null;
        $message = 'How about implementing statusSuffixGet as a GET method in MultiFlexi\\Api\\Server\\DefaultApi class?';

        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * POST updateCredentialType
     * Summary: Update Credential Type
     * Notes: Update credential type
     * Output-Formats: [application/json].
     *
     * @param ServerRequestInterface $request          Request
     * @param ResponseInterface      $response         Response
     * @param int                    $credentialTypeID ID of Credential Type to return
     * @param string                 $suffix           force format suffix
     *
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function updateCredentialType(
        ServerRequestInterface $request,
        ResponseInterface $response,
        int $credentialTypeID,
        string $suffix
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $limit = (\array_key_exists('limit', $queryParams)) ? $queryParams['limit'] : null;
        $message = 'How about implementing updateCredentialType as a POST method in MultiFlexi\\Api\\Server\\DefaultApi class?';

        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * POST updateCredentials
     * Summary: Update Credentials
     * Notes: Update credentials
     * Output-Formats: [application/json].
     *
     * @param ServerRequestInterface $request      Request
     * @param ResponseInterface      $response     Response
     * @param int                    $credentialId ID of Credential to return
     * @param string                 $suffix       force format suffix
     *
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function updateCredentials(
        ServerRequestInterface $request,
        ResponseInterface $response,
        int $credentialId,
        string $suffix
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $token = (\array_key_exists('token', $queryParams)) ? $queryParams['token'] : null;
        $limit = (\array_key_exists('limit', $queryParams)) ? $queryParams['limit'] : null;
        $message = 'How about implementing updateCredentials as a POST method in MultiFlexi\\Api\\Server\\DefaultApi class?';

        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * POST updateTopic
     * Summary: Update Topic
     * Notes: Update topic
     * Output-Formats: [application/json].
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param int                    $topicId  ID of Topic to return
     * @param string                 $suffix   force format suffix
     *
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function updateTopic(
        ServerRequestInterface $request,
        ResponseInterface $response,
        int $topicId,
        string $suffix
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $limit = (\array_key_exists('limit', $queryParams)) ? $queryParams['limit'] : null;
        $message = 'How about implementing updateTopic as a POST method in MultiFlexi\\Api\\Server\\DefaultApi class?';

        throw new HttpNotImplementedException($request, $message);
    }
}
